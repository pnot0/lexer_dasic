
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ATT CALL COMMENT COND DECLARE DO ELSE ELSIF END FOR FUNCTION ID IF IMPORT LOOP LPAREN NEXT NUMBER PRINT RPAREN STEP STRING THEN TO WHITILstmt : prnt\n\t\t\t| if\n\t\t\t| cdlp\n\t\t\t| func\n\t\t\t| impt\n\t\t\t| \n  \tif : IF ID COND ID THEN stmt\n\t\t\t| ELSIF ID COND ID THEN stmt\n\t\t\t| ELSE stmt\n\tcdlp : FOR ID ATT NUMBER TO NUMBER STEP NUMBER stmt NEXT\n\t\t\t| DO stmt LOOP WHITIL ID COND ID\n\tfunc : DECLARE FUNCTION ID LPAREN ID RPAREN stmt END \n\t\t\t| CALL ID LPAREN NUMBER RPAREN\n\timpt : IMPORT ID\n\tprnt : PRINT STRING'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,10,16,19,24,37,38,42,43,44,49,52,54,],[-6,0,-1,-2,-3,-4,-5,-6,-15,-9,-14,-6,-6,-13,-7,-8,-11,-12,-10,]),'PRINT':([0,10,12,37,38,47,51,],[7,7,7,7,7,7,7,]),'IF':([0,10,12,37,38,47,51,],[8,8,8,8,8,8,8,]),'ELSIF':([0,10,12,37,38,47,51,],[9,9,9,9,9,9,9,]),'ELSE':([0,10,12,37,38,47,51,],[10,10,10,10,10,10,10,]),'FOR':([0,10,12,37,38,47,51,],[11,11,11,11,11,11,11,]),'DO':([0,10,12,37,38,47,51,],[12,12,12,12,12,12,12,]),'DECLARE':([0,10,12,37,38,47,51,],[13,13,13,13,13,13,13,]),'CALL':([0,10,12,37,38,47,51,],[14,14,14,14,14,14,14,]),'IMPORT':([0,10,12,37,38,47,51,],[15,15,15,15,15,15,15,]),'LOOP':([2,3,4,5,6,10,12,16,19,21,24,37,38,42,43,44,49,52,54,],[-1,-2,-3,-4,-5,-6,-6,-15,-9,28,-14,-6,-6,-13,-7,-8,-11,-12,-10,]),'END':([2,3,4,5,6,10,16,19,24,37,38,42,43,44,47,49,50,52,54,],[-1,-2,-3,-4,-5,-6,-15,-9,-14,-6,-6,-13,-7,-8,-6,-11,52,-12,-10,]),'NEXT':([2,3,4,5,6,10,16,19,24,37,38,42,43,44,49,51,52,53,54,],[-1,-2,-3,-4,-5,-6,-15,-9,-14,-6,-6,-13,-7,-8,-11,-6,-12,54,-10,]),'STRING':([7,],[16,]),'ID':([8,9,11,14,15,22,25,26,34,35,46,],[17,18,20,23,24,29,31,32,40,41,49,]),'FUNCTION':([13,],[22,]),'COND':([17,18,40,],[25,26,46,]),'ATT':([20,],[27,]),'LPAREN':([23,29,],[30,35,]),'NUMBER':([27,30,39,48,],[33,36,45,51,]),'WHITIL':([28,],[34,]),'THEN':([31,32,],[37,38,]),'TO':([33,],[39,]),'RPAREN':([36,41,],[42,47,]),'STEP':([45,],[48,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'stmt':([0,10,12,37,38,47,51,],[1,19,21,43,44,50,53,]),'prnt':([0,10,12,37,38,47,51,],[2,2,2,2,2,2,2,]),'if':([0,10,12,37,38,47,51,],[3,3,3,3,3,3,3,]),'cdlp':([0,10,12,37,38,47,51,],[4,4,4,4,4,4,4,]),'func':([0,10,12,37,38,47,51,],[5,5,5,5,5,5,5,]),'impt':([0,10,12,37,38,47,51,],[6,6,6,6,6,6,6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> stmt","S'",1,None,None,None),
  ('stmt -> prnt','stmt',1,'p_stmt','lexer_parser.py',63),
  ('stmt -> if','stmt',1,'p_stmt','lexer_parser.py',64),
  ('stmt -> cdlp','stmt',1,'p_stmt','lexer_parser.py',65),
  ('stmt -> func','stmt',1,'p_stmt','lexer_parser.py',66),
  ('stmt -> impt','stmt',1,'p_stmt','lexer_parser.py',67),
  ('stmt -> <empty>','stmt',0,'p_stmt','lexer_parser.py',68),
  ('if -> IF ID COND ID THEN stmt','if',6,'p_if','lexer_parser.py',72),
  ('if -> ELSIF ID COND ID THEN stmt','if',6,'p_if','lexer_parser.py',73),
  ('if -> ELSE stmt','if',2,'p_if','lexer_parser.py',74),
  ('cdlp -> FOR ID ATT NUMBER TO NUMBER STEP NUMBER stmt NEXT','cdlp',10,'p_cdlp','lexer_parser.py',79),
  ('cdlp -> DO stmt LOOP WHITIL ID COND ID','cdlp',7,'p_cdlp','lexer_parser.py',80),
  ('func -> DECLARE FUNCTION ID LPAREN ID RPAREN stmt END','func',8,'p_func','lexer_parser.py',85),
  ('func -> CALL ID LPAREN NUMBER RPAREN','func',5,'p_func','lexer_parser.py',86),
  ('impt -> IMPORT ID','impt',2,'p_impt','lexer_parser.py',91),
  ('prnt -> PRINT STRING','prnt',2,'p_prnt','lexer_parser.py',95),
]
